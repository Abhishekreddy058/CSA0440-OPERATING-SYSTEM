#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/types.h>
#include <unistd.h>

#define SHM_SIZE 1024 

int main() {
    int shm_id;
    char *shm_ptr;
    key_t key = 1234;
    shm_id = shmget(key, SHM_SIZE, 0666 | IPC_CREAT);
    if (shm_id < 0) {
        perror("shmget failed");
        exit(1);
    }
    shm_ptr = (char *)shmat(shm_id, NULL, 0);
    if (shm_ptr == (char *)-1) {
        perror("shmat failed");
        exit(1);
    }
    if (fork() == 0) {
        sleep(1);  
        printf("Child Process: Reading from shared memory...\n");
        printf("Data read from shared memory: %s\n", shm_ptr);
        shmdt(shm_ptr);
    } else {
        printf("Parent Process: Writing to shared memory...\n");
        strcpy(shm_ptr, "Hello from Parent Process!");
        wait(NULL);
        shmdt(shm_ptr);
        shmctl(shm_id, IPC_RMID, NULL);
    }

    return 0;
}
